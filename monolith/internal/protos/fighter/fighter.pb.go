// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: fighter.proto

package fighter

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UnitType int32

const (
	UnitType_UNIT_TYPE_UNKNOWN  UnitType = 0
	UnitType_UNIT_TYPE_TANK     UnitType = 1
	UnitType_UNIT_TYPE_HEALER   UnitType = 2
	UnitType_UNIT_TYPE_SUPPORT  UnitType = 3
	UnitType_UNIT_TYPE_ATTACKER UnitType = 4
)

// Enum value maps for UnitType.
var (
	UnitType_name = map[int32]string{
		0: "UNIT_TYPE_UNKNOWN",
		1: "UNIT_TYPE_TANK",
		2: "UNIT_TYPE_HEALER",
		3: "UNIT_TYPE_SUPPORT",
		4: "UNIT_TYPE_ATTACKER",
	}
	UnitType_value = map[string]int32{
		"UNIT_TYPE_UNKNOWN":  0,
		"UNIT_TYPE_TANK":     1,
		"UNIT_TYPE_HEALER":   2,
		"UNIT_TYPE_SUPPORT":  3,
		"UNIT_TYPE_ATTACKER": 4,
	}
)

func (x UnitType) Enum() *UnitType {
	p := new(UnitType)
	*p = x
	return p
}

func (x UnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_fighter_proto_enumTypes[0].Descriptor()
}

func (UnitType) Type() protoreflect.EnumType {
	return &file_fighter_proto_enumTypes[0]
}

func (x UnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitType.Descriptor instead.
func (UnitType) EnumDescriptor() ([]byte, []int) {
	return file_fighter_proto_rawDescGZIP(), []int{0}
}

type Element int32

const (
	Element_ELEMENT_UNKNOWN Element = 0
	Element_ELEMENT_FIRE    Element = 1
	Element_ELEMENT_WATER   Element = 2
	Element_ELEMENT_GRASS   Element = 3
	Element_ELEMENT_NORMAL  Element = 4
)

// Enum value maps for Element.
var (
	Element_name = map[int32]string{
		0: "ELEMENT_UNKNOWN",
		1: "ELEMENT_FIRE",
		2: "ELEMENT_WATER",
		3: "ELEMENT_GRASS",
		4: "ELEMENT_NORMAL",
	}
	Element_value = map[string]int32{
		"ELEMENT_UNKNOWN": 0,
		"ELEMENT_FIRE":    1,
		"ELEMENT_WATER":   2,
		"ELEMENT_GRASS":   3,
		"ELEMENT_NORMAL":  4,
	}
)

func (x Element) Enum() *Element {
	p := new(Element)
	*p = x
	return p
}

func (x Element) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Element) Descriptor() protoreflect.EnumDescriptor {
	return file_fighter_proto_enumTypes[1].Descriptor()
}

func (Element) Type() protoreflect.EnumType {
	return &file_fighter_proto_enumTypes[1]
}

func (x Element) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Element.Descriptor instead.
func (Element) EnumDescriptor() ([]byte, []int) {
	return file_fighter_proto_rawDescGZIP(), []int{1}
}

type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Element Element  `protobuf:"varint,3,opt,name=element,proto3,enum=fighter.Element" json:"element,omitempty"`
	Type    UnitType `protobuf:"varint,4,opt,name=type,proto3,enum=fighter.UnitType" json:"type,omitempty"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fighter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_fighter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_fighter_proto_rawDescGZIP(), []int{0}
}

func (x *Unit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Unit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Unit) GetElement() Element {
	if x != nil {
		return x.Element
	}
	return Element_ELEMENT_UNKNOWN
}

func (x *Unit) GetType() UnitType {
	if x != nil {
		return x.Type
	}
	return UnitType_UNIT_TYPE_UNKNOWN
}

type UnitByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnitByIDRequest) Reset() {
	*x = UnitByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fighter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitByIDRequest) ProtoMessage() {}

func (x *UnitByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fighter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitByIDRequest.ProtoReflect.Descriptor instead.
func (*UnitByIDRequest) Descriptor() ([]byte, []int) {
	return file_fighter_proto_rawDescGZIP(), []int{1}
}

func (x *UnitByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UnitByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit *Unit `protobuf:"bytes,1,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *UnitByIDResponse) Reset() {
	*x = UnitByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fighter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitByIDResponse) ProtoMessage() {}

func (x *UnitByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fighter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitByIDResponse.ProtoReflect.Descriptor instead.
func (*UnitByIDResponse) Descriptor() ([]byte, []int) {
	return file_fighter_proto_rawDescGZIP(), []int{2}
}

func (x *UnitByIDResponse) GetUnit() *Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

var File_fighter_proto protoreflect.FileDescriptor

var file_fighter_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x22, 0x7d, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x2e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x10, 0x55, 0x6e,
	0x69, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x2a, 0x7a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x54, 0x41, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x45, 0x52, 0x10, 0x02, 0x12, 0x15,
	0x0a, 0x11, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x45, 0x52, 0x10, 0x04, 0x2a, 0x6a, 0x0a,
	0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x41, 0x54, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x52,
	0x41, 0x53, 0x53, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x04, 0x32, 0x51, 0x0a, 0x0e, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x55,
	0x6e, 0x69, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65,
	0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a, 0x17,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fighter_proto_rawDescOnce sync.Once
	file_fighter_proto_rawDescData = file_fighter_proto_rawDesc
)

func file_fighter_proto_rawDescGZIP() []byte {
	file_fighter_proto_rawDescOnce.Do(func() {
		file_fighter_proto_rawDescData = protoimpl.X.CompressGZIP(file_fighter_proto_rawDescData)
	})
	return file_fighter_proto_rawDescData
}

var file_fighter_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_fighter_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_fighter_proto_goTypes = []interface{}{
	(UnitType)(0),            // 0: fighter.UnitType
	(Element)(0),             // 1: fighter.Element
	(*Unit)(nil),             // 2: fighter.Unit
	(*UnitByIDRequest)(nil),  // 3: fighter.UnitByIDRequest
	(*UnitByIDResponse)(nil), // 4: fighter.UnitByIDResponse
}
var file_fighter_proto_depIdxs = []int32{
	1, // 0: fighter.Unit.element:type_name -> fighter.Element
	0, // 1: fighter.Unit.type:type_name -> fighter.UnitType
	2, // 2: fighter.UnitByIDResponse.unit:type_name -> fighter.Unit
	3, // 3: fighter.FighterService.UnitByID:input_type -> fighter.UnitByIDRequest
	4, // 4: fighter.FighterService.UnitByID:output_type -> fighter.UnitByIDResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_fighter_proto_init() }
func file_fighter_proto_init() {
	if File_fighter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fighter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fighter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fighter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fighter_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fighter_proto_goTypes,
		DependencyIndexes: file_fighter_proto_depIdxs,
		EnumInfos:         file_fighter_proto_enumTypes,
		MessageInfos:      file_fighter_proto_msgTypes,
	}.Build()
	File_fighter_proto = out.File
	file_fighter_proto_rawDesc = nil
	file_fighter_proto_goTypes = nil
	file_fighter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FighterServiceClient is the client API for FighterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FighterServiceClient interface {
	UnitByID(ctx context.Context, in *UnitByIDRequest, opts ...grpc.CallOption) (*UnitByIDResponse, error)
}

type fighterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFighterServiceClient(cc grpc.ClientConnInterface) FighterServiceClient {
	return &fighterServiceClient{cc}
}

func (c *fighterServiceClient) UnitByID(ctx context.Context, in *UnitByIDRequest, opts ...grpc.CallOption) (*UnitByIDResponse, error) {
	out := new(UnitByIDResponse)
	err := c.cc.Invoke(ctx, "/fighter.FighterService/UnitByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FighterServiceServer is the server API for FighterService service.
type FighterServiceServer interface {
	UnitByID(context.Context, *UnitByIDRequest) (*UnitByIDResponse, error)
}

// UnimplementedFighterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFighterServiceServer struct {
}

func (*UnimplementedFighterServiceServer) UnitByID(context.Context, *UnitByIDRequest) (*UnitByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnitByID not implemented")
}

func RegisterFighterServiceServer(s *grpc.Server, srv FighterServiceServer) {
	s.RegisterService(&_FighterService_serviceDesc, srv)
}

func _FighterService_UnitByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnitByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FighterServiceServer).UnitByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fighter.FighterService/UnitByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FighterServiceServer).UnitByID(ctx, req.(*UnitByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FighterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fighter.FighterService",
	HandlerType: (*FighterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UnitByID",
			Handler:    _FighterService_UnitByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fighter.proto",
}
